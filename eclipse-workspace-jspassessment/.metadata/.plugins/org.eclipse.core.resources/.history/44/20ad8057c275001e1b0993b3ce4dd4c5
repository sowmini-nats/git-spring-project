package com.example.demo.controller;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.User;
import com.example.demo.service.ManagerService;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpSession;

@RestController
public class ManagerController {
	HttpServletRequest request;
	@Autowired
	ManagerService service;
	
	@GetMapping("/agent-detail-all")
	public String getAgentDetailsAll(Model model,HttpServletRequest request) {
		HttpSession session = request.getSession();
		String roleType="Manager";
		if(roleType.equals(session.getAttribute("role"))) {
		Iterable<User> userList=service.getAllUsers();
		Iterator<User> it=userList.iterator();
		Iterable<User> userLists = null;
		List<User> user1=new ArrayList<User>();
		while(it.hasNext()) {
			  User user =  it.next();
			  if(user.getRole().equals("Agent")) {
				  user1.add(user);
			  }
			  userLists = user1;
		}
		System.out.println(userLists);
		return "redirect:/login";
		}
		else {
			return "redirect:/login";
		}
	}
	
	@GetMapping("/agent-detail")
	public Iterable<User> getAgentDetails(Model model,HttpServletRequest request) {
		Iterable<User> userLists = null;
		HttpSession session = request.getSession();
		String roleType="Agent";
		if(roleType.equals(session.getAttribute("role"))) {
		Iterable<User> userList=service.getAllUsers();
		Iterator<User> it=userList.iterator();
		List<User> user1=new ArrayList<User>();
		while(it.hasNext()) {
			  User user =  it.next();
			  if(user.getRole().equals("Agent")&&user.getStatus().equals("Active")) {
				  user1.add(user);
			  }
			  userLists = user1;
		}
		System.out.println(userLists);
		}
		return userLists;
	}
	
	@GetMapping("/update/{id}")
	public void updateAgent(@PathVariable("id")int id) {
		service.updateAgent(id);
	}
	
	@PostMapping("/add-agent")
	public void addAgent(@RequestBody User user) {
		service.addAgent(user);
	}
	
	@GetMapping("/insurance-application")
	public String displayApplication() {
		return "CustomerInsuranceApplciation";
	}

}
